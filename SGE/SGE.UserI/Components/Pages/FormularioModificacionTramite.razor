@rendermode InteractiveServer
@inject SGE.Aplicacion.CasoUsoModificacionTramite casoModificacion

@if (TramiteMod != null && visible)
{
    <div>
        <h6>Ingrese Campos Del Tramite</h6>
        <form>
            <div class="form-group">
                <label for="contenido">Contenido</label>
                <input placeholder="@TramiteMod.Contenido" class="form-control" @bind="TramiteMod.Contenido">
            </div>
            <div class="form-group">
                <label for="idExpediente">ID de Expediente</label>
                <input placeholder="@TramiteMod.ExpedienteId" class="form-control"  @bind="TramiteMod.ExpedienteId">
            </div>
            <div class="form-group">
                <label for="fechaHoraCreacion" class="form-label">Fecha de Creaci√≥n</label>
                <input type="datetime-local" class="form-control" placeholder="@TramiteMod.FechaHoraCreacion" @bind="TramiteMod.FechaHoraCreacion" />
            </div>
            <select @bind="TramiteMod.EstadoTramite" class="form-control">
                @foreach (var estado in Enum.GetValues(typeof(EstadoTramite)))
                {
                    <option value="@estado">@estado</option>
                }
            </select>
        </form>
        <button type="button" class="btn btn-secondary" @onclick="Ocultar">Cancelar</button>
        <button type="button" class="btn btn-primary" @onclick="Modificar">Modificar</button>
    </div>
    <br>
    <DialogoAlerta @ref="dialogoAlerta" Mensaje="@alerta"></DialogoAlerta>
}

@code {
    [Parameter] public Usuario? User { get; set; }
    [Parameter] public Tramite? TramiteMod { get; set; } 
    [Parameter] public EventCallback OnExpedienteAltaExitosa { get; set; }

    private bool visible = false;
    private DialogoAlerta dialogoAlerta = new DialogoAlerta();
    private string alerta = "";

    public void Mostrar()
    {
        if (TramiteMod != null)
        {
            visible = true;
            StateHasChanged();
        }
        else
        {
            alerta = "TramiteMod es nulo.";
            dialogoAlerta.Mostrar();
        }
    }

    private void Ocultar()
    {
        visible = false;
        StateHasChanged();
    }

    private async Task Modificar()
    {
        try
        {
            if(TramiteMod != null && User != null){
            casoModificacion.Ejecutar(TramiteMod, User);
            }
            this.Ocultar();
            await OnExpedienteAltaExitosa.InvokeAsync();
        }
        catch (Exception e)
        {
            alerta = e.Message;
            dialogoAlerta.Mostrar();
        }
    }
}
