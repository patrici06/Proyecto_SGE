@page "/gestion-usuarios"
@rendermode InteractiveServer
@inject SGE.Aplicacion.CasoUsoBajaUsuario bajaUsuario
@inject SGE.Aplicacion.CasoUsoConsultaUsuarios consultaUsuarios
@inject SGE.Aplicacion.CasoUsoModificacionUsuario modificacionUsuario
@inject SGE.Aplicacion.CasoUsoOtorgarPermisos otorgarPermisos
@inject ServicioUsuarioEstado estado
@inject SGE.Aplicacion.CasoUsoEliminarPermiso eliminarPermisos

<h1>Gestión de Usuarios</h1>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Nombre</th>
            <th>Apellido</th>
            <th>Correo</th>
            <th>Permisos</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var usuario in usuarios)
        {
            <tr>
                @if(usuario.permisos.Contains(Permiso.adminPermiso) == false)
                {
                    <td>@usuario.Id</td>
                    <td>@usuario.nombre</td>
                    <td>@usuario.apellido</td>
                    <td>@usuario.correo</td>
                    <td>@foreach(var permiso in usuario.permisos)
                        {
                            @if(permiso != Permiso.adminPermiso)
                            {
                                <option value="@permiso">@permiso</option>
                            }
                        }
                    </td>
                    <td>
                        <button class="btn btn-primary" @onclick="() => EditarUsuario(usuario)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => EliminarUsuario(usuario)">Eliminar</button>
                        <button class="btn btn-primary" @onclick="() => AgregarPermiso(usuario)">Agregar Permiso</button>
                        <button class="btn btn-danger" @onclick="() => EliminarPermiso(usuario)">Eliminar Permiso</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<FormularioUsuario @ref="formularioUsuario" usuarioAModificar="@usuarioAMod" ModExitosa="MostrarConfirmacion"></FormularioUsuario>

@if (mostrarEliminar) 
{
    <div>
        <h5>Confirmación de Eliminación</h5>
        <p>¿Estás seguro de que deseas eliminar este usuario?</p>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="NoMostrar">Cancelar</button>
        <button type="button" class="btn btn-danger" @onclick="EliminarUsuarioConfirmado">Eliminar</button>
    </div>
}

@if (mostrarPermiso) 
{
    <div>
        <h5>Agregar un Permiso</h5>
        <select @bind="nuevoPermiso" class="from-control">
            @foreach(var permiso in Enum.GetValues(typeof(Permiso)))
            {
               <option value="@permiso">@permiso</option>
            }
        </select>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="NoMostrar">Cancelar</button>
        <button type="button" class="btn btn-danger" @onclick="OtorgarPermiso">Otorgar</button>
    </div>
}

@if (mostrarPermiso2) 
{
    <div>
        <h5>Eliminar un Permiso</h5>
        <select @bind="nuevoPermiso" class="from-control">
        @if(usuarioAMod != null)
            @foreach(var permiso in usuarioAMod.permisos)
            {
               <option value="@permiso">@permiso</option>
            }
        </select>
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="NoMostrar">Cancelar</button>
        <button type="button" class="btn btn-danger" @onclick="QuitarPermiso">Quitar</button>
    </div>
}

<br>
<DialogoConfirmacion @ref="dialogoConfirmacion" Mensaje="@confirmacion"></DialogoConfirmacion>
<DialogoAlerta @ref="dialogoAlerta" Mensaje="@msj"></DialogoAlerta>


@code
{
    private List<Usuario> usuarios = new List<Usuario>();
    private Usuario? usuarioAMod;
    private DialogoConfirmacion dialogoConfirmacion = new DialogoConfirmacion();
    private String confirmacion = "";
    private DialogoAlerta dialogoAlerta = new DialogoAlerta();
    private String msj = "";
    private bool mostrarEliminar = false;
    private bool mostrarPermiso = false;
    private bool mostrarPermiso2 = false;
    private Permiso nuevoPermiso;
    

    private FormularioUsuario formularioUsuario = new FormularioUsuario();
        
    protected override void OnInitialized()
    {
        usuarios = consultaUsuarios.Ejecutar();
    }

    private void MostrarConfirmacion()
    {
        StateHasChanged();
        dialogoConfirmacion.Mostrar();
    }

    private void EditarUsuario(Usuario user)
    {
        confirmacion = "Modificación Exitosa";
        usuarioAMod = user;
        formularioUsuario.Mostrar();
    }

    private void EliminarUsuario(Usuario user)
    {
        usuarioAMod = user;
        mostrarEliminar = true;
        confirmacion = "Eliminación Exitosa";
    }
    private void EliminarUsuarioConfirmado()
    {
        try
        {
            if(usuarioAMod  == null) throw new ValidacionException("Los campos se encuentran incompletos");
            bajaUsuario.Ejecutar(usuarioAMod.Id);
            usuarios.Remove(usuarioAMod);
            NoMostrar();
            MostrarConfirmacion();
        }
        catch(Exception e)
        {
            msj = e.Message;
            dialogoAlerta.Mostrar();
        }
    }

    private void AgregarPermiso(Usuario usuario)
    {
        usuarioAMod = usuario;
        mostrarPermiso = true;
        confirmacion = "Permiso Otorgado";
    }

    private void OtorgarPermiso()
    {
       try
       {
        if(usuarioAMod != null){     
        if(usuarioAMod.permisos.Contains(nuevoPermiso))
            throw new ValidacionException($"Ya posee {nuevoPermiso}");
        otorgarPermisos.Ejecutar(usuarioAMod, nuevoPermiso);
        MostrarConfirmacion();
        }
        }
        catch(Exception e ){
            msj = e.Message;
            dialogoAlerta.Mostrar();
        }          
    }

    private void EliminarPermiso(Usuario usuario)
    {
        usuarioAMod = usuario;
        mostrarPermiso2 = true;
        confirmacion = "Permiso Eliminado";
    }

    private void QuitarPermiso()
    {
        try
        {
            if(usuarioAMod != null)
            eliminarPermisos.Ejecutar(usuarioAMod, nuevoPermiso);
            NoMostrar();
            MostrarConfirmacion();
        }
        catch(Exception e)
        {
            msj = e.Message;
            dialogoAlerta.Mostrar();
        }
    }

    private void NoMostrar()
    {
        mostrarEliminar = false;
        mostrarPermiso = false;
        mostrarPermiso2 = false;
    }

}