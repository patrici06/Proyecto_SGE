@rendermode InteractiveServer
@inject SGE.Aplicacion.CasoUsoBajaTramite bajaTramite
@inject SGE.Aplicacion.CasoUsoConsultaTramiteID consultaId
@inject SGE.Aplicacion.UsuarioValidador validador

@if (visible)
{
    <button class="btn btn-danger btn-sm" @onclick="Ocultar">Cerrar</button>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Expediente ID</th>
                <th>Contenido</th>
                <th>Fecha de Creación</th>
                <th>Fecha de Última Modificación</th>
                <th>Usuario que Modificó</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
        @if(Lista != null){
            @foreach (var t in Lista)
            {
                <tr>
                    <td>@t.Id</td>
                    <td>@t.ExpedienteId</td>
                    <td>@t.Contenido</td>
                    <td>@t.FechaHoraCreacion</td>
                    <td>@t.FechaHoraUltimaModificacion</td>
                    <td>@t.IdUsuario</td>
                    <td>@t.EstadoTramite</td>
                    <td>
                            <button class="btn btn-danger btn-sm" @onclick="() => baja(t)">Eliminar</button>
                        
                            <button class="btn btn-primary btn-sm" @onclick="() => modificar(t)">Modificar</button>
                    </td>
                </tr>
            }
        }
        </tbody>
        <FormularioModificacionTramite @ref="formulario" User="@User" TramiteMod="@modificable" OnExpedienteAltaExitosa="MostrarConfirmacion"></FormularioModificacionTramite>
        <DialogoConfirmacion @ref="dialogoConfirmacion" Mensaje="@confirmacion"></DialogoConfirmacion>
        <DialogoAlerta @ref="dialogoAlerta" Mensaje="@alerta"></DialogoAlerta>
        </table>
    <br> 
}

@code {
    [Parameter] public List<Tramite>? Lista { get; set; }
    [Parameter] public Usuario User { get; set; } = default!;
    private bool visible = false;
    private DialogoAlerta dialogoAlerta = new DialogoAlerta();
    private DialogoConfirmacion dialogoConfirmacion = new DialogoConfirmacion();
    private string confirmacion = "";
    private string alerta = "";
    private FormularioModificacionTramite formulario = new FormularioModificacionTramite();
    private Tramite? modificable;

    public void Mostrar()
    {
        visible = true;
        StateHasChanged();
    }

    private void Ocultar()
    {
        visible = false;
        StateHasChanged();
    }
     private void MostrarConfirmacion()
    {
        dialogoConfirmacion.Mostrar();
        StateHasChanged();
    }
    private void baja(Tramite tramite)
    {
        try
        {
            bajaTramite.Ejecutar(tramite.Id, User);
            Lista?.Remove(tramite);
            confirmacion = "baja Exitosa";
            StateHasChanged();
        }
        catch (Exception e)
        {
            alerta = e.Message;
            dialogoAlerta.Mostrar();
        }
    }

    private void modificar(Tramite t)
    {
        try
        {
            if (!validador.TienePermiso(User, Permiso.ExpedienteModificacion))
            {
                throw new AutorizacionException("No Posee Permiso");
            }
            else
            {
                modificable = consultaId.Ejecutar(t.Id);
                if (modificable == null)
                {
                    throw new RepositorioException("Expediente no Disponible");
                }
                else
                {
                    formulario.Mostrar();
                }
            }
            confirmacion = "Modificacion exitosa";
        }
        catch (Exception e)
        {
            alerta = e.Message;
            dialogoAlerta.Mostrar();
        }
    }
}
